workorder has

id                          ==
workorder_status            ==
priority                    ==
work_category               ==
created_by                  ==
job_hazard                  ==
equipment                   ==
location                    ==
department                  ==
report                      ==
requested_by                ==
assigned_to                 ==
tasks
name                        ==
due_date                    ==
description                 ==
document                    ==
image                       ==
over_due                    ==
started                     ==
started_date                ==
closed                      ==
closed_date                 ==
workorder_type              ==
estimated_cost              ==              
total_man_hour_cost
total_inoice_cost
total_inoice_cost
created                     ==
updated                     ==
maintenance_company


// note 
fix nav for regular users   ==

change open/close to workorder status   ==
fix description "null" value            ==
fix workorder status make initail setting of status when created. (possibly make it not nullable)   ==


for today 

complete workdone frontend                                  xxx
complete workdone backend                                   xxx
show detail workdones from workorder detail popup           xxx
show workorders of equipment, from equipment detail popup   xxx
handle wokrorder changes localy gracefully                  xxx


create a scheduler frontend
create a scheduler backend
create a crone job scheduler to create pm
create a get api to get next 10 schedululed maintenance
create a get api to get open pm maintenance for open workorders right side
for calendar add all workorder 


create to edit schedulers resource and active


create for lists in our table row (x more) for more than 2 lists                            xxx
create the add edit and remove scheduled work order popup                                   xxx
create the add edit and remove scheduled work order backend                                 xxx
fit the scheduler components in a cron job function to start scheduling pm                  xxx
create a separate open pm in right side for frontend                                        xxx
create a calander view to map the upcoming 10 or (5) or (more proper) scheduled pms
create a calander to show (100) or (more proper) done workorders




xx    name                        = models.CharField(max_length=250)
xx    created_by                  = models.ForeignKey(account_models.Profile, on_delete=models.PROTECT, related_name='created_by_scheduler')
xx    description                 = models.TextField(null = True, blank = True)
xx    work_category               = models.ForeignKey(WorkCategory, on_delete = models.PROTECT, blank = True, null = True)
xx    job_hazard                  = models.ForeignKey(JobHazard, on_delete=models.PROTECT, null=True, blank=True)
xx    priority                    = models.ForeignKey(report_models.Priority, on_delete=models.SET_NULL, blank = True, null = True)
xx    estimated_cost              = models.DecimalField(max_digits=10, decimal_places=2, validators=[MinValueValidator(0.00)], null=True, blank=True)

xx    multiple                    = models.BooleanField()

xx    equipment                   = models.ManyToManyField(equipment_models.Equipment)

xx    active                      = models.BooleanField(default = True)

xx    scheduler                   = models.ManyToManyField(Scheduler)

xx    start_date                  = models.DateField(null = True, blank = True)
xx    end_date                    = models.DateField(null = True, blank = True)
xx    due_date                    = models.IntegerField(validators=[MinValueValidator(1)])

xx    workorder_status            = models.ForeignKey(WorkOrderStatus, on_delete=models.PROTECT)

xx    tasks                       = models.ManyToManyField(Tasks, related_name = "Pmworkorder_tasks", blank=True)
xx    assigned_to                 = models.ManyToManyField(account_models.Profile)

xx    document                    = models.FileField(upload_to='PmWorkorder_document/', blank=True, null=True)
xx    image                       = models.ImageField(upload_to='PmWorkorder/', blank=True)

xx    last_scheduled_date         = models.DateField(null = True, blank = True)
xx    last_complited              = models.BooleanField(default=False)
xx    scheduled_so_far            = models.IntegerField(validators=[MinValueValidator(0)], default=0)
xx    done_so_far                 = models.IntegerField(validators=[MinValueValidator(0)], default=0)

xx    created                     = models.DateTimeField(auto_now_add=True)
xx    updated                     = models.DateTimeField(auto_now=True)


?? BUG ------------------------------------------------------------------------------

xxx fix not active users from getting any access in the system.

xxx fix the PM workorders done_so_far issue (if they are closed and not rejected increment done_so_far).

xxx fix frontend workorder review rejecte icons

xxx fix backend workorder rejecte images and doucments (file upload)

xxx fix backend workorder rejecte reschedule

xxx fix the review seen icon in wokrorder detail popup

************************************************************************************************
*****************************************         New            *******************************
*****************************************         Thinking       *******************************
************************************************************************************************
note --------------------------------------------------------------------------------

xxx 1) add line management (line maintenance, equipments under line, equipments critical for line,
    line downtime and maintenance cost)

??? 2) add "manager user type" and update user model with work order assignable flag

xxx 3) add recording downtime when report is approved on equipment

4) add line data and employee performance to system report

xxx 5) add adding workorder from scratch for admin users

??? 6) better part management who added part who took (reduced (used for workorder)) part

xxx 7) bug workorder make status change since optional

8) make frontend unselectable

xxx 9) add time senseitive software blocking

10) add things learned from maintenance form from unique
xxx    10.1) add to create workorder from scratch what i did to report (conditions)

11) add users cred for admin users

12) better scheduled workorder editing specially change equipemnt assigned

&&&& future better features

update workdone as long as workorder is not closed

add equipemnt part not spare part so they can report specific part

change workorder closed date to date time

add work_done to workorder_review model and create a BooleanField to work_done called approved to simbolize the workdone is approved

send web socket info to update open workorders (right side) when workorder overdued, updated, created and closed.

///// SET UP INFO /////

dont forget to add scheduler data like -:> months

1) add buildings

2) add departments

3) add locations

4) add set up neccesory daya (down, working-----)

6) add production lines

5) add equipments


///// feedback from gash jemal ////////

//
xxx add final equipment status and condition to workorder model.

xxx fix pm workorders (upcoming calander)
xxx fix rejecting workorer rescheduling

xxx add schedule time for pm wokrorders

xxx make every time computation on the backend zone aware

xxx add real time communication

xxx add part models

xxx add part list page

xxx add part adding mechanizem

xxx add part detail

edit part storage (aisle, row, bin, part info)

--- for add part storage make min quantity required for parts with alert on low.

xxx fix logout error (continus sending of logout request)
xxx add resing exception when part is reduced bellow 0.. in the backend 


add part purchase request right side notification for admins, restrict non-admins form approving purchases (add real time).
xxx add reason for purchase part request.
add record part history (init, add, consumed)
//

xxx change equipment report to workorder request.
xxx for report ignoring provide resoning.
xxx in approving report quick access to equipment detail page.

xxx on workorder duedate should be with time not date. (this changes many things).

xxx add part management adding updating for the technic head (and also part requesting).

xxx parts parts parts by that i mean part management should be done properly no negative quantity of parts.

x comment of operetor should be by technician.

xxx more data on workorder review card. like how much it took and used parts and equipment condition.

xxx name corrections (resource == employee (lebor))

x approving and rejecting workorder review should be done on the same popup (no new popup for them).

xxx for printing workorder add total time spent on the workdone. (workorder start time should be first workorder seen time)

xxx Reporting make the table first and make it to sort by employee and equipment at the bottom of the table add rows for total and avarage ((make relavent data.))

xx Annual, monthly reports (with divations from last year or month).

xx manager report (simple concise and chowable reports for managers).

Remember to add somekind of communication (like chat if possible).

xxx add system info in the login page


for tmr
finish annual and monthly reports